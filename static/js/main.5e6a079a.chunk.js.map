{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Counter","useState","counter","setCounter","drinksin","setDrinksin","useCookies","cookies","setCookie","removeCookie","tml","setTML","useEffect","console","log","localStorage","getItem","d","Date","getTime","setItem","Number","msPast","standard","display","toFixed","calculateDrinksin","setInterval","id","onClick","newtml","removeItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CookiesProvider","document","getElementById"],"mappings":"kMAIA,SAASA,IAAW,IAAD,EACaC,mBAAS,GADtB,mBACVC,EADU,KACDC,EADC,OAEeF,mBAAS,GAFxB,mBAEVG,EAFU,KAEAC,EAFA,OAG0BC,YAAW,CAAC,MAAM,aAH5C,mBAGVC,EAHU,KAGDC,EAHC,KAGUC,EAHV,OAIKR,mBAAS,GAJd,mBAIVS,EAJU,KAILC,EAJK,KA4EjB,OA5BAC,qBAAU,WAER,GADAC,QAAQC,IAAIC,aAAaC,QAAQ,YAAY,SACL,MAApCD,aAAaC,QAAQ,YAAoB,CAC3C,IAAIC,EAAI,IAAIC,KACZV,EAAU,WAAYS,EAAEE,WACxBJ,aAAaK,QAAQ,WAAWH,EAAEE,gBAIhCX,EAAU,WAAYO,aAAaC,QAAQ,aAK5CD,aAAaC,QAAQ,QAEtBL,EAAOU,OAAON,aAAaC,QAAQ,WAIrC,IAEFJ,qBAAU,YAhEV,WACE,IAEIU,GAFI,IAAIJ,MAAOC,UAEJZ,EAAQgB,SAKnBC,GAFWd,EAAIY,GAEI,KACvBE,EAAQC,QAAQ,GAGhBpB,EAAYmB,EAAQC,QAAQ,IAqD5BC,GACAvB,EAAWwB,aAAY,kBAAMzB,EAAQ,IAAI,QACzC,CAACA,IAID,gCAEC,sBAAK0B,GAAG,cAAR,cAAwBxB,EAAxB,0BAOD,sBAAKwB,GAAG,YAAR,UACA,wBAAQC,QAhEV,WACEhB,QAAQC,WAAWJ,GACjB,IAAIoB,EAASpB,EAAKW,OAAO,MACzBV,EAAOmB,GAEPf,aAAaK,QAAQ,MAAMU,IA2D7B,iBACA,wBAAQD,QAxDV,WACElB,EAAOD,EAAI,MAEXK,aAAaK,QAAQ,MAAMV,EAAI,OAqD/B,iBACA,wBAAQmB,QAhDV,WACExB,EAAY,GACZI,EAAa,YACbA,EAAa,OACbM,aAAagB,WAAW,YACxBhB,aAAagB,WAAW,QA2CxB,2BAgBWC,MATf,WACE,OACE,8BACE,cAAChC,EAAD,O,QC3FSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAW1Bb,M","file":"static/js/main.5e6a079a.chunk.js","sourcesContent":["import './App.css';\nimport React,{useEffect, useState} from 'react' \nimport { useCookies } from 'react-cookie'\n\nfunction Counter() {\n  const [counter, setCounter] = useState(0)\n  const [drinksin, setDrinksin] = useState(0)\n  const [cookies, setCookie, removeCookie ] =useCookies(['tml','standard'])\n  const [tml, setTML] = useState(0)\n\n  function calculateDrinksin() {\n    var d = new Date().getTime()\n    // console.log(d + ' D is ')\n    var msPast = d-cookies.standard\n    // console.log(msPast + ' msPast is')\n    // console.log(tml+' TML IS')\n    var timeLeft = tml-msPast\n    // console.log(timeLeft + ' timeleft is')\n    var display = timeLeft/3600000\n    display.toFixed(4)\n    // console.log(display.toFixed(4) + \" display is this mother\")\n    // setDrinksin(display.toFixed(5))\n    setDrinksin(display.toFixed(6))\n  }\n    \n\n\n  function plusone() {\n    console.log(typeof tml)\n      var newtml = tml+ Number(3600000)\n      setTML(newtml)\n      // console.log(tml + ' TML IS')\n      localStorage.setItem('tml',newtml)\n      // console.log('TML AFTER LOCALSTORAGE '+ localStorage.getItem('tml'))\n    \n  }\n  function minusone() {\n    setTML(tml-3600000)\n    // setCookie('tml', tml)\n    localStorage.setItem('tml',tml-3600000)\n\n\n\n\n  }\n  function reset() {\n    setDrinksin(0)\n    removeCookie('standard')\n    removeCookie('tml')\n    localStorage.removeItem('standard')\n    localStorage.removeItem('tml')\n  }\n  useEffect(() => {\n    console.log(localStorage.getItem('standard')+'first')\n    if (localStorage.getItem('standard') == null){\n      var d = new Date()\n      setCookie('standard', d.getTime())\n      localStorage.setItem('standard',d.getTime())\n}\n      else {\n        // console.log('typeof storage of standard is '+typeof (localStorage.getItem('standard')))\n        setCookie('standard', localStorage.getItem('standard'))\n        // console.log('GOT COOKIE FROM STORAGE' + cookies.standard)\n        // console.log(cookies.standard)\n        // console.log(cookies)\n      }\n   if (localStorage.getItem('tml')){\n      // console.log('TYPE OF IS YES')\n      setTML(Number(localStorage.getItem('tml')))\n      // console.log(' local storage set TML as ' + localStorage.getItem('tml'))\n\n    }\n  },[])\n  \n  useEffect(() => {\n    calculateDrinksin()\n    setCounter(setInterval(() => counter+1 , 1000))\n  },[counter])\n\n\n  return(\n    <div>\n      {/* <h1> {cookies.standard}</h1> */}\n     <div id='maincounter'> {drinksin} Drinks left in body\n     {/* <div> Time in Milliseconds {tml} is DEBUGGER </div> */}\n\n     \n     \n     </div>\n\n    <div id='plusminus'>\n    <button onClick={plusone}> + </button>\n    <button onClick={minusone}> - </button>\n    <button onClick={reset}> Reset </button>  \n  \n      </div>\n  </div>\n  )\n}\n\nfunction App() {\n  return (\n    <div >\n      <Counter/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { CookiesProvider } from 'react-cookie';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  document.getElementById('root')\n);\n\n{/* <React.StrictMode>\n<App />\n</React.StrictMode>,\ndocument.getElementById('root') */}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}